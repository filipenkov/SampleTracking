# -------------------------------------------------------------------
# P R O J E C T  P R O P E R T I E S
# -------------------------------------------------------------------

maven.compile.target=1.5
maven.compile.source=1.5
# This is needed because of MPTEST-67, which doesn't seem to pass along the target flag.
maven.compile.compilerargs=-target 1.5
#maven.repo.remote=http://repository.atlassian.com,http://mirrors.ibiblio.org/pub/mirrors/maven,http://www.ibiblio.org/maven
maven.repo.remote=http://repository.atlassian.com,http://repo1.maven.org/maven,http://mirrors.ibiblio.org/pub/mirrors/maven,https://m2proxy.atlassian.com/repository/public,https://m2proxy.atlassian.com/repository/internal
maven.junit.fork=true
#
# Now that we have a US language packs, the func tests running in St Louis will end up using it.  However all our assertions
# are in the "Queens English" (long to rein over us...).   So we must force the JVM to be in en_AU
#
maven.junit.jvmargs=-Dfile.encoding=utf-8 -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -Duser.language=en -Duser.region=AU

build.jira.functests.version=4.3-SNAPSHOT

## This property is not a standard maven.junit property. We have hacked maven on our build box to
## respect this property and pass it through to the ant task. This tells the test runner to stop
## running the tests if it encounters a failure. This should allow us to see the state of JIRA
## when an acceptance test fails.
maven.junit.haltonfailure=true

# The following makes the build work on unix.  Windows works fine without it.
# See maven-war-plugin.  A blank includes includes everything on windows, but nothing on unix.
maven.war.classes.includes=**

# JIRA home - for making JIRA web application
jira.home=${basedir}/../jira

