<atlassian-plugin key="${project.groupId}.${project.artifactId}" name="${project.name}" plugins-version="2">
    <plugin-info>
        <description>${project.description}</description>
        <version>${project.version}</version>
        <vendor name="${project.organization.name}"
                url ="${project.organization.url}" />
    </plugin-info>

<!--========================================================================
    Custom Fields
    ========================================================================-->

    <!--_______________________________________________________________________
        Add Search Custom Field (text) (used)
        _______________________________________________________________________
      -->
    <customfield-type
            key  ="additionalSearchField-text"
            name ="Copy of a Field (Text) [${project.artifactId}] [${project.version}]"
            class="org.jcvi.jira.plugins.customfield.additionalsearch.TextAdditionalSearchFieldType">
        <description>
            Creates a text copy of a field that can be used to avoid the
            single searcher per field limit.
            The field can be added to both an Issue and its Sub-types to allow
            searching for a Sub-type using a field from the Issue.
            [${project.name}-${project.version}]
        </description>
        <type>text</type>
        <resource
        location="templates/org/jcvi/jira/plugins/customfield/additionalsearch/view.vm"
            type="velocity"
            name="view"/><!-- NOT used in the issue view only in the
                              configuration view -->
        <!--No edit resource, we don't want it rendered-->
        <!--No xml  resource, we don't want it rendered-->
        <!--No column-view resource, we don't want it rendered-->
        <resource type="velocity"
                  name="view-config"
              location="templates/org/jcvi/jira/plugins/customfield/shared/config/view-config.vm"/>
        <!-- todo: for Jira 5.2+ suitable indexers can be defined here directly
             instead of having to add wrapper versions of each -->
    </customfield-type>

    <!--_______________________________________________________________________
        Add Search Custom Field (number) (used)
        _______________________________________________________________________
      -->
    <customfield-type
            key  ="additionalSearchField-number"
            name ="Copy of a field (Number) [${project.artifactId}] [${project.version}]"
            class="org.jcvi.jira.plugins.customfield.additionalsearch.NumberAdditionalSearchFieldType">
        <description>
            Creates a copy of a field that can be used to avoid the
            single searcher per field limit.
            The field can be added to both an Issue and its Sub-types to allow
            searching for a Sub-type using a field from the Issue.
            If the field being copied is not a Number field then an attempt will
            be made to parse the value as a number. If it can't be parsed then
            no value will be stored.
            [${project.name}-${project.version}]
        </description>
        <type>number</type>
        <resource
        location="templates/org/jcvi/jira/plugins/customfield/additionalsearch/view.vm"
            type="velocity"
            name="view"/>
        <!--No view resource, we don't want it rendered-->
        <!--No edit resource, we don't want it rendered-->
        <!--No xml  resource, we don't want it rendered-->
        <!--No column-view resource, we don't want it rendered-->
        <resource type="velocity"
                  name="view-config"
                  location="templates/org/jcvi/jira/plugins/customfield/shared/config/view-config.vm"/>
    </customfield-type>

    <!-- Owing to the lack of context info passed a unique 'action' name is
         needed for each field that is to be configured
         webwork1[key]  - must be unique but is never actually referenced
         webwork1.actions.action[name] -
                          The class to use for the Action. This
                          is an extension of CFConfigAction that specifies
                          the parameters to configure for this field
                          via getConfigurableParameters and getConfigItem.
                          It also specifies a unique key to use when storing
                          the configuration information via getSessionKey
         webwork1.actions.action[alias] -
                          The name of the Action. This is referenced from
         -->
    <webwork1 key="AdditionalSearchFieldAction"
             name="Additional Search configuration action"
            class="java.lang.Object">
        <!--class="webwork.action.Action">-->
        <description>
            The action for editing configuration of the additional search field
        </description>
        <actions>
            <action
                  name="org.jcvi.jira.plugins.customfield.additionalsearch.config.AdditionalSearchFieldAction"
                 alias="${project.groupId}.${project.artifactId}.AdditionalSearchFieldConfig">
                <!-- Uses the standard templates -->
                <view name="input">/templates/org/jcvi/jira/plugins/customfield/shared/config/edit-config.vm</view>
                <view name="securitybreach">/secure/views/securitybreach.jsp</view>
            </action>
        </actions>
    </webwork1>


<!--===========================================================================
    Custom Searchers
    ===========================================================================-->
    <!--_______________________________________________________________________
        LocalTextSearcher (Used)
        _______________________________________________________________________
        Wraps TextSearcher, copied from system-customfieldtypes-plugin.xml
        The key and class in the header have been changed and the
        valid-customfield-type has been replaced with additionalSearchField-text
      -->
    <customfield-searcher key="localTextsearcher" name="Free Text Searcher [${project.artifactId}]  [${project.version}]"
        i18n-name-key="admin.customfield.searcher.textsearcher.name"
        class="org.jcvi.jira.plugins.searcher.localTextSearcher">
        <description key="admin.customfield.searcher.textsearcher.desc">
            Search for values using a free text search. [${project.name}-${project.version}]
        </description>
        <resource type="velocity" name="search" location="templates/plugins/fields/edit-searcher/search-basictext.vm"/>
        <resource type="velocity" name="view"   location="templates/plugins/fields/view-searcher/view-searcher-basictext.vm"/>
        <resource type="velocity" name="label"  location="templates/org/jcvi/jira/plugins/customfield/shared/label.vm"/>

        <valid-customfield-type package="${project.groupId}.${project.artifactId}"
                                key="additionalSearchField-text"/>
    </customfield-searcher>


    <!--_______________________________________________________________________
        LocalExacttextsearcher (Used)
        _______________________________________________________________________
        Wraps ExactTextSearcher (The atlassian one), copied from
        system-customfieldtypes-plugin.xml
        The key and class in the header have been changed and the
        valid-customfield-type has been replaced with additionalSearchField-text
      -->
    <customfield-searcher key="localExacttextsearcher" name="Exact Text Searcher [${project.artifactId}]  [${project.version}]"
        i18n-name-key="admin.customfield.searcher.exacttextsearcher.name"
        class="org.jcvi.jira.plugins.searcher.localExactTextSearcher">
        <description key="admin.customfield.searcher.exacttextsearcher.desc">
            Search for values exactly matching the input [${project.name}-${project.version}]
        </description>
        <resource type="velocity" name="search" location="templates/plugins/fields/edit-searcher/search-basictext.vm"/>
        <resource type="velocity" name="view" location="templates/plugins/fields/view-searcher/view-searcher-basictext.vm"/>
        <resource type="velocity" name="label"  location="templates/org/jcvi/jira/plugins/customfield/shared/label.vm"/>

        <valid-customfield-type package="${project.groupId}.${project.artifactId}"
                                key="additionalSearchField-text"/>
    </customfield-searcher>


    <!--_______________________________________________________________________
        LocalNumberRangeSearcher (Used)
        _______________________________________________________________________
        Wraps NumberRangeSearcher, copied from system-customfieldtypes-plugin.xml
        The key and class in the header have been changed and the
        valid-customfield-type has been replaced with additionalSearchField-number
      -->
    <customfield-searcher key="localNumberRangeSearcher" name="Number range searcher [${project.artifactId}]  [${project.version}]"
        i18n-name-key="admin.customfield.searcher.numberrange.name"
        class="org.jcvi.jira.plugins.searcher.LocalNumberRangeSearcher">
        <description key="admin.customfield.searcher.numberrange.desc">
            Allow searching for a number that is in a given range [${project.name}-${project.version}]
        </description>
        <resource type="velocity" name="search" location="templates/plugins/fields/edit-searcher/search-number-range.vm"/>
        <resource type="velocity" name="view" location="templates/plugins/fields/view-searcher/view-searcher-number-range.vm"/>
        <resource type="velocity" name="label"  location="templates/org/jcvi/jira/plugins/customfield/shared/number-label.vm"/>

        <valid-customfield-type package="${project.groupId}.${project.artifactId}"
                                key="additionalSearchField-number"/>
    </customfield-searcher>


    <!--_______________________________________________________________________
        MultiValueSearcher (Used)
        _______________________________________________________________________
        MultiValueSearcher doesn't have any particular custom field paired with it
      -->
    <customfield-searcher key="MultiValueSearcher" name="Multi-value Searcher [${project.artifactId}]  [${project.version}]"
        class="org.jcvi.jira.plugins.searcher.multivalue.MultiValueSearcher">
        <!-- description for use in the GUI -->
        <description>
            Multi-value Searcher provides a method to enter more than one
            value to test against. The Issue is included if it exactly
            matches one of the search values.
            [${project.name}-${project.version}]
        </description>
        <resource
        location="templates/org/jcvi/jira/plugins/customfield/multivalue/search.vm"
            type="velocity"
            name="search"/>
        <resource
        location="templates/org/jcvi/jira/plugins/customfield/multivalue/search-summary.vm"
            type="velocity"
            name="view"/>
        <resource
        location="templates/org/jcvi/jira/plugins/customfield/shared/label.vm"
            type="velocity"
            name="label"/>
        <!--
          Added for MultiValueSearcher, this contains name value pairs that set
          the initial values of some variables.
        -->
        <resource
        location="/config/org/jcvi/jira/plugins/customfield/multivalue/default.properties"
            type="properties"
            name="configuration"/>
        <valid-customfield-type package="${project.groupId}.${project.artifactId}"
                                key="additionalSearchField-text"/>
        <valid-customfield-type package="com.atlassian.jira.plugin.system.customfieldtypes" key="textfield"/>
        <valid-customfield-type package="com.atlassian.jira.plugin.system.customfieldtypes" key="textarea"/>
        <valid-customfield-type package="com.atlassian.jira.plugin.system.customfieldtypes" key="readonlyfield"/>
    </customfield-searcher>


<!--===========================================================================
    Workflow
    ========================================================================-->
    <!--_______________________________________________________________________
        SQLPostFunction
        _______________________________________________________________________
      -->
    <workflow-function key="SQLPostFunction"
                       name="Execute an SQL Statement on transition [${project.artifactId}]  [${project.version}]"
                       class="org.jcvi.jira.plugins.workflow.AddArgsWorkflowPluginFactory">
        <description>
            This uses information from an Issue's fields to populate an SQL
            preparedStatement. The statement may be defined inline, as a
            resource within the plug-in or in the plug-in's definition.
            The database connection can be created using
            a driver, url, user, password or from a JNDI resource.
            [${project.name}-${project.version}]
        </description>
        <!-- This is where the actual workflow function plugin is configured -->
        <function-class>
            org.jcvi.jira.plugins.workflow.SQLPostFunction
        </function-class>

        <orderable>true</orderable> <!-- true to allow moving it in the list -->
        <unique>false</unique>      <!-- false to allow more than one per transition -->
        <deletable>true</deletable> <!-- only really for built-in functions -->

        <!-- This appears to be used to render the description on the Transition setup screen-->
        <resource type="velocity"
                  name="view"
                  location="templates/org/jcvi/jira/plugins/workflow/SQLPostFunction/view.vm"/>
        <!-- This is used to render inside the form on the create screen-->
        <resource type="velocity"
                  name="input-parameters"
                  location="templates/org/jcvi/jira/plugins/workflow/SQLPostFunction/edit.vm"/>
        <resource type="velocity"
                  name="edit-parameters"
                  location="templates/org/jcvi/jira/plugins/workflow/SQLPostFunction/edit.vm"/>

        <resource type="SQL"
                  name="test"
                  location="sql/org/jcvi/jira/plugins/workflow/test.sql"/>
        <resource type="SQL"
                  name="Synchronize status in GLK"
                  location="sql/org/jcvi/jira/plugins/workflow/sync.sql"/>
        <debug>false</debug>
    </workflow-function>

    <!--_______________________________________________________________________
        FieldContainsCondition
        _______________________________________________________________________
      -->
    <workflow-condition key="FieldContainsCondition"
                        name="Condition to allow/block Issues based on comparing a field's value to a fixed list of values. [${project.artifactId}]  [${project.version}]"
                        class="org.jcvi.jira.plugins.workflow.AddArgsWorkflowPluginFactory">
        <description>
            Test the value of a field against a fixed list of values.
            [${project.name}-${project.version}]
        </description>

        <condition-class>
            org.jcvi.jira.plugins.workflow.FieldContainsCondition
        </condition-class>

        <!-- This appears to be used to render the description on the Transition setup screen-->
        <resource type="velocity"
                  name="view"
                  location="templates/org/jcvi/jira/plugins/workflow/FieldContainsCondition/view.vm"/>
        <!-- This is used to render inside the form on the create screen-->
        <resource type="velocity"
                  name="input-parameters"
                  location="templates/org/jcvi/jira/plugins/workflow/FieldContainsCondition/edit.vm"/>
        <resource type="velocity"
                  name="edit-parameters"
                  location="templates/org/jcvi/jira/plugins/workflow/FieldContainsCondition/edit.vm"/>

    </workflow-condition>


<!--===========================================================================
    Other
    ===========================================================================-->
    <resource type="download" name="images/"  location="images"/>
    <resource type="download" name="scripts/" location="scripts"/>
</atlassian-plugin>
