# ---------------------------------------------------------------------
#                          MACROS
# ---------------------------------------------------------------------

# ------------------------- misc. Text -------------------------
WIKI.NOTATION.misc1={$hello}
XHTML.NOTATION.misc1=<p class="paragraph">{$hello}</p>
XHTML.V2.NOTATION.misc1=<p>{$hello}</p>

WIKI.NOTATION.escape1=\\{hello\\}
XHTML.V2.NOTATION.escape1=<p>{hello}</p>

WIKI.NOTATION.escape2=\\{hello}
XHTML.V2.NOTATION.escape2=<p>{hello}</p>

WIKI.NOTATION.escape3=\\{hello}
XHTML.V2.NOTATION.escape3=<p>{hello}</p>

WIKI.NOTATION.escape4=\\\\{hello}
XHTML.V2.NOTATION.escape4=<p><br clear="all" /><div class="error"><span class="error">Unknown macro: {hello}</span> </div></p>

WIKI.NOTATION.escape5={color:red}Highlighting a \\{color} macro.{color}
XHTML.V2.NOTATION.escape5=<p><font color="red">Highlighting a {color} macro.</font></p>

# ------------------------- Quote -------------------------
WIKI.NOTATION.quote1={quote}\n\
* item1\n\
* item2\n\
{quote}\n\n\
The end
XHTML.NOTATION.quote1=<blockquote class="blockquote">\n<ul class="star">\n\
<li> item1</li>\n\
<li> item2</li>\n\
</ul></blockquote><p class="paragraph">The end</p>
XHTML.V2.NOTATION.quote1=<blockquote>\n<ul>\n\
\t<li>item1</li>\n\
\t<li>item2</li>\n\
</ul>\n</blockquote>\n\n\<p>The end</p>


# ------------------------- Color -------------------------
WIKI.NOTATION.color1={color:red}This text is in red and {noformat}this part is *preformatted* as well{noformat}.{color}
XHTML.NOTATION.color1=<p class="paragraph"><font color="red">\
This text is in red and <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>this part is &#42;preformatted&#42; as well</pre>\n\
</div></div>.</font></p>
XHTML.V2.NOTATION.color1=<p><font color="red">\
This text is in red and <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>this part is *preformatted* as well</pre>\n\
</div></div>.</font></p>

WIKI.NOTATION.color2={{blah}}\n\n\
{color:red}Note{color}\n\n\
{{blah}}
XHTML.NOTATION.color2=<p class="paragraph"><tt class="monospaced">blah</tt></p>\
<font color="red">Note</font>\
<p class="paragraph"><tt class="monospaced">blah</tt></p>
XHTML.V2.NOTATION.color2=<p><tt>blah</tt></p>\n\n\
<p><font color="red">Note</font></p>\n\n\
<p><tt>blah</tt></p>

WIKI.NOTATION.color3={invalidmacro}\n\n\
{color:red}Note{color}\n\n\
{invalidmacro}
XHTML.NOTATION.color3=<div class="error">Unknown macro: <div class="error">Unknown macro: {invalidmacro}</div></div><p class="paragraph"><font color="red">Note</font></p>
XHTML.V2.NOTATION.color3=<div class="error"><span class="error">Unknown macro: {invalidmacro}</span> \n\n<p><font color="red">Note</font></p>\n</div>


# ------------------------- Panel -------------------------
WIKI.NOTATION.panel1={panel}Some *bold* code here{panel}
XHTML.NOTATION.panel1=<div class="panel" style="border-width: 1px;"><div class="panelContent">\n\
<p>Some <b>bold</b> code here</p>\n\
</div></div>

WIKI.NOTATION.panel2={panel:title=Hello}Just a hello world here{panel}
XHTML.NOTATION.panel2=<div class="panel" style="border-width: 1px;"><div class="panelHeader" style="border-bottom-width: 1px;"><b>Hello</b></div><div class="panelContent">\n\
<p>Just a hello world here</p>\n\
</div></div>

WIKI.NOTATION.panel3={panel:borderStyle=dashed|borderColor=blue}some +block+ here{panel}
XHTML.NOTATION.panel3=<div class="panel" style="border-color: blue;border-style: dashed;border-width: 1px;">\
<div class="panelContent">\n\
<p>some <ins>block</ins> here</p>\n\
</div></div>

WIKI.NOTATION.panel4={panel:bgColor=red}this panel has only background color{panel}
XHTML.NOTATION.panel4=<div class="panel" style="background-color: red;border-width: 1px;"><div class="panelContent" style="background-color: red;">\n\
<p>this panel has only background color</p>\n\
</div></div>

WIKI.NOTATION.panel5={panel:title=My Title|borderStyle=dashed|borderColor=#ccc|bgColor=#FFFFCE|titleBGColor=#F7D6C1}\
a block of text surrounded with a *panel*{panel}
XHTML.NOTATION.panel5=<div class="panel" style="background-color: #FFFFCE;border-color: #ccc;border-style: dashed;border-width: 1px;">\
<div class="panelHeader" style="border-bottom-width: 1px;border-bottom-style: dashed;border-bottom-color: #ccc;background-color: #F7D6C1;"><b>My Title</b></div><div class="panelContent" style="background-color: #FFFFCE;">\n\
<p>a block of text surrounded with a <b>panel</b></p>\n\
</div></div>

WIKI.NOTATION.panel6={panel:title=My Title}\n\
* item 1\n\
* item 2\n\
* item 3\n\
* item 4\n\
{panel}
XHTML.NOTATION.panel6=<div class="panel" style="border-width: 1px;"><div class="panelHeader" style="border-bottom-width: 1px;"><b>My Title</b></div><div class="panelContent">\n\
<ul>\n\
\t<li>item 1</li>\n\
\t<li>item 2</li>\n\
\t<li>item 3</li>\n\
\t<li>item 4</li>\n\
</ul>\n</div></div>

WIKI.NOTATION.panel7={panel:title=Technical Question 1}\n\
Some explanations here:\n\n\
1a. step one\n\
1b. step tow\n\
1c. step three\n\
1d. step four\n\
{panel}\n\
h3. Response To Technical Question 1
XHTML.NOTATION.panel7=<div class="panel" style="border-width: 1px;"><div class="panelHeader"><b>Technical Question 1</b></div><div class="panelContent">\n\
<p class="paragraph">Some explanations here:</p>1a. step one<br/>\n\
1b. step tow<br/>\n\
1c. step three<br/>\n\
1d. step four\n\
</div></div>\n\
<h3 class="heading3"><a name="ResponseToTechnicalQuestion1"></a> Response To Technical Question 1</h3>
XHTML.V2.NOTATION.panel7=<div class="panel" style="border-width: 1px;"><div class="panelHeader" style="border-bottom-width: 1px;"><b>Technical Question 1</b></div><div class="panelContent">\n\
<p>Some explanations here:</p>\n\n<p>1a. step one<br/>\n\
1b. step tow<br/>\n\
1c. step three<br/>\n\
1d. step four</p>\n\
</div></div>\n\
<h3><a name="ResponseToTechnicalQuestion1"></a>Response To Technical Question 1</h3>

WIKI.NOTATION.panel8={panel:title=(!) I like cheese}Some *bold* code here{panel}
XHTML.NOTATION.panel8=<div class="panel" style="border-width: 1px;"><div class="panelHeader" style="border-bottom-width: 1px;"><b><img class="emoticon" src="http://localhost:8080/images/icons/emoticons/warning.gif" height="16" width="16" align="absmiddle" alt="" border="0"/> I like cheese</b></div><div class="panelContent">\n\
<p>Some <b>bold</b> code here</p>\n\
</div></div>

# ------------------------- Preformatted Text -------------------------
WIKI.NOTATION.preformatted1={noformat} some *preformatted* texts here. so this is not a template @variable@ anymore! {noformat}
XHTML.NOTATION.preformatted1=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>some &#42;preformatted&#42; texts here. so this is not a template &#64;variable&#64; anymore&#33;</pre>\n\
</div></div>
XHTML.V2.NOTATION.preformatted1=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre> some *preformatted* texts here. so this is not a template @variable@ anymore! </pre>\n\
</div></div>

WIKI.NOTATION.preformatted2={noformat} some *preformatted* multi line texts\n\
here:\n\n\n\n\
this is not a _emphesis_ text as well as a +inserted+ one\
{noformat}
XHTML.NOTATION.preformatted2=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>some &#42;preformatted&#42; multi line texts&#10;\
here:&#10;&#10;&#10;&#10;\
this is not a &#95;emphesis&#95; text as well as a &#43;inserted&#43; one\
</pre>\n\
</div></div>
XHTML.V2.NOTATION.preformatted2=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre> some *preformatted* multi line texts\n\
here:\n\n\n\n\
this is not a _emphesis_ text as well as a +inserted+ one\
</pre>\n\
</div></div>

WIKI.NOTATION.preformatted3=this is a *bold* text outside of _preformmatted_ block \
{noformat} some *preformatted* multi line texts\n\
here:\n\n\n\n\
this is not a _emphesis_ text as well as a +inserted+ one\
{noformat} and here is the END of preformmatted block
XHTML.NOTATION.preformatted3=<p class="paragraph">this is a <b class="strong">bold</b> text outside of <em class="emphasis">preformmatted</em> block \
<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>some &#42;preformatted&#42; multi line texts&#10;\
here:&#10;&#10;&#10;&#10;\
this is not a &#95;emphesis&#95; text as well as a &#43;inserted&#43; one\
</pre>\n\
</div></div> and here is the END of preformmatted block</p>
XHTML.V2.NOTATION.preformatted3=<p>this is a <b>bold</b> text outside of <em>preformmatted</em> block <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre> some *preformatted* multi line texts\n\
here:\n\n\n\n\
this is not a _emphesis_ text as well as a +inserted+ one</pre>\n\
</div></div> and here is the END of preformmatted block</p>


WIKI.NOTATION.preformatted4={noformat}some *preformatted* texts here{noformat} then some *not preformatted* texts and finally {noformat}more _preformatted_ texts here{noformat}
XHTML.NOTATION.preformatted4=<p><div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>some *preformatted* texts here</pre>\n\
</div></div> \
then some <b class="strong">not preformatted</b> texts and finally \
<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>more _preformatted_ texts here</pre>\n\
</div></div></p>
XHTML.V2.NOTATION.preformatted4=<p><div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>some *preformatted* texts here</pre>\n\
</div></div> \
then some <b>not preformatted</b> texts and finally \
<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>more _preformatted_ texts here</pre>\n\
</div></div></p>

WIKI.NOTATION.preformatted5={noformat}INSERT INTO user VALUES ( 'localhost',<USER>,password( <PASS> ),'N','N' );{noformat}
XHTML.NOTATION.preformatted5=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>\
INSERT INTO user VALUES ( 'localhost',&lt;USER&gt;,password( &lt;PASS&gt; ),&#039;N&#039;,&#039;N&#039; );\
</pre>\n\
</div></div>
XHTML.V2.NOTATION.preformatted5=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>\
INSERT INTO user VALUES ( 'localhost',&lt;USER&gt;,password( &lt;PASS&gt; ),'N','N' );\
</pre>\n\
</div></div>

WIKI.NOTATION.preformatted6={noformat}Well {color:red}this block should be in red{color} since it's inside no-format block{noformat}
XHTML.NOTATION.preformatted6=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>\
Well &#123;color:red&#125;this block should be in red&#123;color&#125; since it&#039;s inside no&#45;format block\
</pre>\n\
</div></div>
XHTML.V2.NOTATION.preformatted6=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>\
Well {color:red}this block should be in red{color} since it's inside no-format block\
</pre>\n\
</div></div>

WIKI.NOTATION.preformatted7=foo's bar\n\
{noformat}foo's bar{noformat}
XHTML.NOTATION.preformatted7=<p class="paragraph">foo&#039;s bar\n\
<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>foo&#039;s bar</pre>\n\
</div></div></p>
XHTML.V2.NOTATION.preformatted7=<p>foo's bar</p>\n\
<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>foo's bar</pre>\n\
</div></div>

WIKI.NOTATION.preformatted8={noformat}no hyper link like http://www.atlassian.com or [http://www.atlassian.com] or even [atlassian|http://www.atlassian.com] should get formatted{noformat}
XHTML.NOTATION.preformatted8=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>no hyper link like &#104;ttp://www.atlassian.com or &#91;&#104;ttp://www.atlassian.com&#93; or even &#91;atlassian|&#104;ttp://www.atlassian.com&#93; should get formatted</pre>\n\
</div></div>
XHTML.V2.NOTATION.preformatted8=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>no hyper link like http://www.atlassian.com or [http://www.atlassian.com] or even [atlassian|http://www.atlassian.com] should get formatted</pre>\n\
</div></div>

WIKI.NOTATION.preformatted9={noformat}No emoticon like :-) or :D or even :-( should work here{noformat}
XHTML.NOTATION.preformatted9=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>No emoticon like &#58;&#45;&#41; or &#58;&#68; or even &#58;&#45;&#40; should work here</pre>\n\
</div></div>
XHTML.V2.NOTATION.preformatted9=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>No emoticon like :-) or :D or even :-( should work here</pre>\n\
</div></div>

WIKI.NOTATION.preformatted10={noformat}foo("bar"){noformat}
XHTML.NOTATION.preformatted10=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>foo("bar")</pre>\n\
</div></div>

# CONF-1450
WIKI.NOTATION.preformatted11={noformat}\n### I like cheese\n{noformat}
XHTML.NOTATION.preformatted11=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>### I like cheese\n</pre>\n\
</div></div>

# CONF-1883
WIKI.NOTATION.preformatted12={noformat}\n   One\n   Two\n   Three{noformat}
XHTML.NOTATION.preformatted12=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>   One\n   Two\n   Three</pre>\n\
</div></div>

# CONF-1968
WIKI.NOTATION.preformatted13={noformat}\n\
.\n\
c:\\work\\_common\\code\\flash\n\
c:\\work\\_tools\\flash7\\classes\n\
{noformat}
XHTML.NOTATION.preformatted13=<div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent">\n\
<pre>.\n\
c:\\work\\_common\\code\\flash\n\
c:\\work\\_tools\\flash7\\classes\n\
</pre>\n\
</div></div>

# ------------------------- Preformatted Code -------------------------
WIKI.NOTATION.code1=foo's bar\n\
{code}foo's bar{code}
XHTML.NOTATION.code1=<p class="paragraph">foo&#039;s bar\n\
<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre>foo&#039;s bar</pre>\n\
</div></div></p>
XHTML.V2.NOTATION.code1=<p>foo's bar</p>\n\
<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre class="code-java">foo's bar</pre>\n\
</div></div>

WIKI.NOTATION.code2={code}package com.atlassian.confluence;\n\
\n\
import com.atlassian.confluence.util.ObjectUpdater;\n\
import org.apache.commons.lang.builder.*;\n\
import java.util.*;\n\
\n\n\n\n\
/**\n\
 * @author  Armond Avanes (armond555@yahoo.com)\n\
 * @created May 15, 2003\n\
 */\n\
public class EntityObject\n\
{\n\
    //~ Instance variables \n\
\n\
    private long id = 0;\n\
    private String creatorName;\n\
    private Date creationDate;\n\
\n\
    //~ Methods \n\
\n\
    public long getId()\n\
    {\n\
        return id;\n\
    }\n\
\n\
    public void setId(long id)\n\
    {\n\
        this.id = id;\n\
    }\n\
\n\
    /**\n\
     * @hibernate.property column="CREATOR"\n\
     */\n\
    public String getCreatorName()\n\
    {\n\
        return creatorName;\n\
    }\n\
\n\
    public void setCreatorName(String creatorName)\n\
    {\n\
        this.creatorName = creatorName;\n\
    }\n\
\n\
    /**\n\
    * @hibernate.property column="CREATIONDATE"\n\
    */\n\
    public Date getCreationDate()\n\
    {\n\
        return creationDate;\n\
    }\n\
\n\
    public void setCreationDate(Date creationDate)\n\
    {\n\
        this.creationDate = creationDate;\n\
    }\n\
}\n\
{code}
XHTML.NOTATION.code2=<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre>\
<span class="java&#45;keyword">package</span> com.atlassian.confluence;&#10;&#10;\
<span class="java&#45;keyword">import</span> com.atlassian.confluence.util.ObjectUpdater;&#10;\
<span class="java&#45;keyword">import</span> org.apache.commons.lang.builder.&#42;;&#10;\
<span class="java&#45;keyword">import</span> java.util.&#42;;&#10;&#10;&#10;&#10;&#10;\
/&#42;&#42;&#10;&#42; &#64;author  Armond Avanes (armond555&#64;yahoo.com)&#10;\
&#42; &#64;created May 15, 2003&#10;&#42;/&#10;\
<span class="java&#45;keyword">public</span> class EntityObject&#10;&#123;&#10;\
<span class="java&#45;comment">//&#126; Instance variables </span>&#10;&#10;\
<span class="java&#45;keyword">private</span>&#160;<span class="java&#45;object">long</span> id = 0;&#10;\
<span class="java&#45;keyword">private</span>&#160;<span class="java&#45;object">String</span> creatorName;&#10;\
<span class="java&#45;keyword">private</span> Date creationDate;&#10;&#10;\
<span class="java&#45;comment">//&#126; Methods </span>&#10;&#10;\
<span class="java&#45;keyword">public</span>&#160;<span class="java&#45;object">long</span> getId()&#10;\
&#123;&#10;\
<span class="java&#45;keyword">return</span> id;&#10;\
&#125;&#10;&#10;\
<span class="java&#45;keyword">public</span> void setId(<span class="java&#45;object">long</span> id)&#10;\
&#123;&#10;\
<span class="java&#45;keyword">this</span>.id = id;&#10;\
&#125;&#10;&#10;\
/&#42;&#42;&#10;\
&#42; &#64;hibernate.property column=<span class="java&#45;quote">&quot;CREATOR&quot;</span>&#10;\
&#42;/&#10;\
<span class="java&#45;keyword">public</span>&#160;<span class="java&#45;object">String</span> getCreatorName()&#10;\
&#123;&#10;\
<span class="java&#45;keyword">return</span> creatorName;&#10;\
&#125;&#10;&#10;\
<span class="java&#45;keyword">public</span> void setCreatorName(<span class="java&#45;object">String</span> creatorName)&#10;\
&#123;&#10;\
<span class="java&#45;keyword">this</span>.creatorName = creatorName;&#10;\
&#125;&#10;&#10;\
/&#42;&#42;&#10;\
&#42; &#64;hibernate.property column=<span class="java&#45;quote">&quot;CREATIONDATE&quot;</span>&#10;\
&#42;/&#10;\
<span class="java&#45;keyword">public</span> Date getCreationDate()&#10;\
&#123;&#10;\
<span class="java&#45;keyword">return</span> creationDate;&#10;\
&#125;&#10;&#10;\
<span class="java&#45;keyword">public</span> void setCreationDate(Date creationDate)&#10;\
&#123;&#10;\
<span class="java&#45;keyword">this</span>.creationDate = creationDate;&#10;\
&#125;&#10;\
&#125;</pre>\n\
</div></div>
XHTML.V2.NOTATION.code2=<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre class="code-java"><span class="code-keyword">package</span> com.atlassian.confluence;\n\n\
<span class="code-keyword">import</span> com.atlassian.confluence.util.ObjectUpdater;\n\
<span class="code-keyword">import</span> org.apache.commons.lang.builder.*;\n\
<span class="code-keyword">import</span> java.util.*;\n\n\n\n\n\
/**\n\
* @author  Armond Avanes (armond555@yahoo.com)\n\
* @created May 15, 2003\n\
*/\n\
<span class="code-keyword">public</span> class EntityObject\n\
{\n\
<span class="code-comment">//~ Instance variables \n\
</span>\n\
<span class="code-keyword">private</span> <span class="code-object">long</span> id = 0;\n\
<span class="code-keyword">private</span> <span class="code-object">String</span> creatorName;\n\
<span class="code-keyword">private</span> Date creationDate;\n\n\
<span class="code-comment">//~ Methods \n\
</span>\n\
<span class="code-keyword">public</span> <span class="code-object">long</span> getId()\n\
{\n\
<span class="code-keyword">return</span> id;\n\
}\n\n\
<span class="code-keyword">public</span> void setId(<span class="code-object">long</span> id)\n\
{\n\
<span class="code-keyword">this</span>.id = id;\n\
}\n\n\
/**\n\
* @hibernate.property column=<span class="code-quote">"CREATOR"</span>\n\
*/\n\
<span class="code-keyword">public</span> <span class="code-object">String</span> getCreatorName()\n\
{\n\
<span class="code-keyword">return</span> creatorName;\n\
}\n\n\
<span class="code-keyword">public</span> void setCreatorName(<span class="code-object">String</span> creatorName)\n\
{\n\
<span class="code-keyword">this</span>.creatorName = creatorName;\n\
}\n\n\
/**\n\
* @hibernate.property column=<span class="code-quote">"CREATIONDATE"</span>\n\
*/\n\
<span class="code-keyword">public</span> Date getCreationDate()\n\
{\n\
<span class="code-keyword">return</span> creationDate;\n\
}\n\n\
<span class="code-keyword">public</span> void setCreationDate(Date creationDate)\n\
{\n\
<span class="code-keyword">this</span>.creationDate = creationDate;\n\
}\n\
}</pre>\n\
</div></div>

WIKI.NOTATION.code3=Some SQL code here:\n\
{code:sql}SELECT * from SampleTable WHere name='sample'{code}
XHTML.NOTATION.code3=<p class="paragraph">Some SQL code here:\n\
<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre><span class="sql&#45;keyword">SELECT</span> &#42; <span class="sql&#45;keyword">from</span> SampleTable <span class="sql&#45;keyword">WHere</span> name=&#039;sample&#039;</pre>\n\
</div></div></p>
XHTML.V2.NOTATION.code3=<p>Some SQL code here:</p>\n\
<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre class="code-sql"><span class="code-keyword">SELECT</span> * <span class="code-keyword">from</span> SampleTable <span class="code-keyword">WHere</span> name='sample'</pre>\n\
</div></div>

WIKI.NOTATION.code4=Groovy supports regular expressions natively using the _\\\~"..."_ expression. Plus Groovy supports the =~ (create Matcher) and ==~ (matches regex) operators. e.g.\n\
\n\
{code}\n\
import java.util.regex.Matcher\n\
import java.util.regex.Pattern\n\
\n\
assert "cheesecheese" =~ "cheese"\n\
\n\
// lets create a regex Pattern\n\
pattern = ~"foo"\n\
assert pattern instanceof Pattern\n\
assert pattern.matcher("foo").matches()\n\
\n\
// lets create a Matcher\n\
matcher = "cheesecheese" =~ "cheese"\n\
assert matcher instanceof Matcher\n\
answer = matcher.replaceAll("edam")\n\
\n\
// lets do some replacement\n\
cheese = ("cheesecheese" ==~ "cheese").replaceFirst("nice")\n\
assert cheese == "nicecheese"\n\
{code}
XHTML.NOTATION.code4=<p>\
Groovy supports regular expressions natively using the <em class="emphasis">&#126;&quot;...&quot;</em> expression. \
Plus Groovy supports the =~ (create Matcher) and ==~ (matches regex) operators. e.g.</p>\n\n\
<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre>\
<span class="java&#45;keyword">import</span> java.util.regex.Matcher&#10;\
<span class="java&#45;keyword">import</span> java.util.regex.Pattern&#10;&#10;\
<span class="java&#45;keyword">assert</span>&#160;<span class="java&#45;quote">&quot;cheesecheese&quot;</span> =&#126; <span class="java&#45;quote">&quot;cheese&quot;</span>&#10;&#10;\
<span class="java&#45;comment">// lets create a regex Pattern</span>&#10;\
pattern = &#126;<span class="java&#45;quote">&quot;foo&quot;</span>&#10;\
<span class="java&#45;keyword">assert</span> pattern <span class="java&#45;keyword">instanceof</span> Pattern&#10;\
<span class="java&#45;keyword">assert</span> pattern.matcher(<span class="java&#45;quote">&quot;foo&quot;</span>).matches()&#10;&#10;\
<span class="java&#45;comment">// lets create a Matcher</span>&#10;\
matcher = <span class="java&#45;quote">&quot;cheesecheese&quot;</span> =&#126; <span class="java&#45;quote">&quot;cheese&quot;</span>&#10;\
<span class="java&#45;keyword">assert</span> matcher <span class="java&#45;keyword">instanceof</span> Matcher&#10;\
answer = matcher.replaceAll(<span class="java&#45;quote">&quot;edam&quot;</span>)&#10;&#10;\
<span class="java&#45;comment">// lets <span class="java&#45;keyword">do</span> some replacement</span>&#10;\
cheese = (<span class="java&#45;quote">&quot;cheesecheese&quot;</span> ==&#126; <span class="java&#45;quote">&quot;cheese&quot;</span>).replaceFirst(<span class="java&#45;quote">&quot;nice&quot;</span>)&#10;\
<span class="java&#45;keyword">assert</span> cheese == <span class="java&#45;quote">&quot;nicecheese&quot;</span>\
</pre>\n\
</div></div>
XHTML.V2.NOTATION.code4=<p>Groovy supports regular expressions natively using the <em>&#126;"..."</em> expression. Plus Groovy supports the =~ (create Matcher) and ==~ (matches regex) operators. e.g.</p>\n\n\
<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre class="code-java"><span class="code-keyword">import</span> java.util.regex.Matcher\n\
<span class="code-keyword">import</span> java.util.regex.Pattern\n\n\
<span class="code-keyword">assert</span> <span class="code-quote">"cheesecheese"</span> =~ <span class="code-quote">"cheese"</span>\n\n\
<span class="code-comment">// lets create a regex Pattern\n\
</span>pattern = ~<span class="code-quote">"foo"</span>\n\
<span class="code-keyword">assert</span> pattern <span class="code-keyword">instanceof</span> Pattern\n\
<span class="code-keyword">assert</span> pattern.matcher(<span class="code-quote">"foo"</span>).matches()\n\n\
<span class="code-comment">// lets create a Matcher\n\
</span>matcher = <span class="code-quote">"cheesecheese"</span> =~ <span class="code-quote">"cheese"</span>\n\
<span class="code-keyword">assert</span> matcher <span class="code-keyword">instanceof</span> Matcher\n\
answer = matcher.replaceAll(<span class="code-quote">"edam"</span>)\n\n\
<span class="code-comment">// lets <span class="code-keyword">do</span> some replacement\n\
</span>cheese = (<span class="code-quote">"cheesecheese"</span> ==~ <span class="code-quote">"cheese"</span>).replaceFirst(<span class="code-quote">"nice"</span>)\n\
<span class="code-keyword">assert</span> cheese == <span class="code-quote">"nicecheese"</span></pre>\n\
</div></div>

WIKI.NOTATION.code5={code}\n\
switch (x) {..}\n\
if (i) { ... }\n\
switch (y) { }\n\
{code}
XHTML.NOTATION.code5=<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre><span class="java&#45;keyword">switch</span> &#40;&#120;&#41; &#123;..&#125;&#10;\
<span class="java&#45;keyword">if</span> &#40;&#105;&#41; &#123; &#8230; &#125;&#10;\
<span class="java&#45;keyword">switch</span> &#40;&#121;&#41; &#123; &#125;</pre>\n\
</div></div>
XHTML.V2.NOTATION.code5=<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre class="code-java"><span class="code-keyword">switch</span> (x) {..}\n\
<span class="code-keyword">if</span> (i) { ... }\n\
<span class="code-keyword">switch</span> (y) { }</pre>\n\
</div></div>


WIKI.NOTATION.code6={code}\n\
public class XXX{\n\
    public void xxx() {\n\
        if( a == a && b == b ) {\n\
            throw new ShitHappensExportException ();\n\
        }\n\
    }\n\
}\n\
{code}
XHTML.NOTATION.code6=<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre><span class="java&#45;keyword">public</span> class XXX&#123;&#10;\
<span class="java&#45;keyword">public</span> void xxx() &#123;&#10;\
<span class="java&#45;keyword">if</span>( a == a &amp;&amp; b == b ) &#123;&#10;\
<span class="java&#45;keyword">throw</span>&#160;<span class="java&#45;keyword">new</span> ShitHappensExportException ();&#10;\
&#125;&#10;\
&#125;&#10;\
&#125;</pre>\n\
</div></div>
XHTML.V2.NOTATION.code6=<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre class="code-java"><span class="code-keyword">public</span> class XXX{\n\
<span class="code-keyword">public</span> void xxx() {\n\
<span class="code-keyword">if</span>( a == a &amp;&amp; b == b ) {\n\
<span class="code-keyword">throw</span> <span class="code-keyword">new</span> ShitHappensExportException ();\n\
}\n}\n}</pre>\n\
</div></div>

# CONF-1697
WIKI.NOTATION.code7={code:xml}XML &amp; entities &#1234; should be &lt; escaped &gt;{code}
XHTML.NOTATION.code7=<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre>XML &amp; entities &#1234; should be &lt; escaped &gt;</pre>\n\
</div></div>
XHTML.V2.NOTATION.code7=<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre class="code-xml">XML &amp;amp; entities &amp;#1234; should be &amp;lt; escaped &amp;gt;</pre>\n\
</div></div>

# CONF-2034
WIKI.NOTATION.code8=* test\n\
{code}\n\
if ( a || b )\n\
{\n    for( ;; );\n\
}\n\
{code}
XHTML.NOTATION.code8=<ul>\n\
\t<li>test\n\
<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre class="code-java"><span class="code-keyword">if</span> ( a || b )\n\
{\n    <span class="code-keyword">for</span>( ;; );\n\
}</pre>\n\
</div></div></li>\n\
</ul>\n

# CONF-2035
WIKI.NOTATION.code9={code} ... blah ... {code}
XHTML.NOTATION.code9=<div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent">\n\
<pre class="code-java">... blah ...</pre>\n\
</div></div>

# RNDR-4
WIKI.NOTATION.simple1={simple}This is inside the test macro. It has a link to [confluence|http://confluence.atlassian.com].\
  {panel}This is inside the panel macro.{panel}{simple}
XHTML.V2.NOTATION.simple1=<p>This is inside the test macro. It has a link to <span class="nobr"><a href="http://confluence.atlassian.com">\
  confluence<sup><img class="rendericon" src="http://localhost:8080/images/icons/linkext7.gif" height="7" width="7" \
  align="absmiddle" alt="" border="0"/></sup></a></span>.<div class="panel" style="border-width: 1px;"><div class="panelContent">\n\
<p>This is inside the panel macro.</p>\n\
</div></div></p>