jira-importer-plugin.external.logs.issuesperminute.abbrv = i/m
jira-importer-plugin.external.logs.remaining = (approximately {0} remaining)
jira-importer-plugin.external.values.nomapping = Map as is
jira-importer-plugin.external.values.importasblank = Import as blank
jira-importer-plugin.external.external.import=External Import
jira-importer-plugin.external.import.data=Import Data
jira-importer-plugin.external.other.possibilities=Other possibilities that require some manual work include:
jira-importer-plugin.external.custom.written.jelly.scripts=Custom-written Jelly scripts
jira-importer-plugin.external.contact.atlassian=Please {0}contact Atlassian{1} for further options.
jira-importer-plugin.external.csv=Comma-separated values (CSV)
jira-importer-plugin.external.bugzilla=Bugzilla
jira-importer-plugin.external.fogbugz=FogBugz
jira-importer-plugin.external.mantis=Mantis
jira-importer-plugin.external.enter.bugzilla.details=Enter Bugzilla database connection details.
jira-importer-plugin.external.bugzilla.database.url=Bugzilla Database URL
jira-importer-plugin.external.database.login.name=Database Login Name
jira-importer-plugin.external.database.login.password=Database Login Password
jira-importer-plugin.external.driver.name=Driver Name
jira-importer-plugin.external.bugzilla.import=Import Data from Bugzilla
jira-importer-plugin.external.bugzilla.select.projects=Select Bugzilla projects to import
jira-importer-plugin.external.projects.to.import=Projects to Import
jira-importer-plugin.external.send.email.notifications=Send email notifications
jira-importer-plugin.external.send.email.notifications.description=Check if you want newly created issues to generate trigger notification events
jira-importer-plugin.external.reuse.existing.accounts=Reuse existing user accounts
jira-importer-plugin.external.reuse.existing.accounts.description=Check to assign Bugzilla issues to existing users, if email addresses match
jira-importer-plugin.external.import.only.new.issues=Import only new issues
jira-importer-plugin.external.import.only.new.issues.description=Check if you have previously imported this Bugzilla project, and wish to only import Bugzilla issues not previously seen.
jira-importer-plugin.external.reindex.afterwards=Reindex once afterwards
jira-importer-plugin.external.reindex.afterwards.description=Reindex all data afterwards, rather than only new issues during import. This is faster if there are few existing issues.
jira-importer-plugin.external.import.work.history=Import work history and time estimates
jira-importer-plugin.external.import.work.history.description=Check to have the importer try to import work history and the estimated/remaining time
jira-importer-plugin.external.watch.logs=watch logs in a separate window
jira-importer-plugin.external.map.keys.to.projects=Map JIRA keys to projects
jira-importer-plugin.external.select.keys.for.imported=Select keys for imported projects
jira-importer-plugin.external.watch.logs.in.separate.window=watch logs in a separate window
jira-importer-plugin.external.bugzilla.import.description=Import your Bugzilla data into JIRA.
jira-importer-plugin.external.bugzilla.passwords=Users of Bugzilla will be required to get their passwords sent to them when they login to JIRA.
jira-importer-plugin.external.bugzilla.note=Note: The import process may take a while to complete. Please do <u>NOT</u> push the Import button more than once!
jira-importer-plugin.external.bugzilla.check.for.notification.trigger=Check if you want newly created issues to generate trigger notification events
jira-importer-plugin.external.log.of.events=Log of the events for the import.
jira-importer-plugin.external.bugzilla.log.monitor=Bugzilla Log Monitor
jira-importer-plugin.external.bugzilla.import.log=Bugzilla import log
jira-importer-plugin.external.bugzilla.log.watcher=Import Data from Bugzilla - log watcher
jira-importer-plugin.external.bugzilla.import.progress=Bugzilla Import Progress
jira-importer-plugin.external.bugzilla.import.progress.description=This window lets you see the progress of the Bugzilla import.
jira-importer-plugin.external.enter.mantis.details=Enter Mantis database connection details.
jira-importer-plugin.external.mantis.database.url=Mantis Database URL
jira-importer-plugin.external.import.data.from.mantis=Import Data from Mantis
jira-importer-plugin.external.mantis.step3={0}Step 3 of 3:{1} Select keys for imported projects
jira-importer-plugin.external.mantis.project.lead.description=The username of the Project Lead.
jira-importer-plugin.external.mantis.watch.log=watch logs in a separate window
jira-importer-plugin.external.mantis.log.monitor=Mantis Log Monitor
jira-importer-plugin.external.mantis.select.projects.to.import=Select Mantis projects to import
jira-importer-plugin.external.mantis.step2=Step 2 of 3
jira-importer-plugin.external.mantis.reindex.afterwards=Reindex aftewards
jira-importer-plugin.external.mantis.reindex.afterwards.description=Check to reindex data afterwards (optimizes search speed)
jira-importer-plugin.external.mantis.developer.group.description=Check to allow imported users to edit, move, assign, work on, resolve, close and link issues (in the {0}default permission scheme{1}).
jira-importer-plugin.external.reuse.existing.accounts.description.mantis=Check to assign Mantis issues to existing users, if email addresses match
jira-importer-plugin.external.mantis.attachment.path=Mantis attachment path
jira-importer-plugin.external.mantis.attachment.path.description=Enter the path to the Mantis attachments directory
jira-importer-plugin.external.import.data.description=Import your Mantis data into JIRA.
jira-importer-plugin.external.mantis.import.instruction=Users of Mantis will be required to get their passwords sent to them when they login to JIRA.{0}Note: The import process may take a while to complete. Please do {1}NOT{2} push the Import button more than once!
jira-importer-plugin.external.log=Log
jira-importer-plugin.external.mantis.projects.import=Mantis projects import
jira-importer-plugin.external.mantis.import.log=Mantis import log
jira-importer-plugin.external.mantis.log.watcher=Import Data from Mantis - log watcher
jira-importer-plugin.external.mantis.import.progress=Mantis Import Progress
jira-importer-plugin.external.mantis.import.description=This window lets you see the progress of the Mantis import.
jira-importer-plugin.external.csv.import=Import issues from CSV file
jira-importer-plugin.external.csv.import.instruction=To import issues from CSV you must have a valid {0}configuration file{1} saved on the server. Run the {2}CSV Import Wizard{3} to create or edit a configuration file.
jira-importer-plugin.external.csv.wizard=The wizard will guide you through how to map the data in your CSV file to JIRA information. Once this is completed, you can save the file on the server and use it in the import process.
jira-importer-plugin.external.csv.import.file.location=CSV Import file
jira-importer-plugin.external.csv.import.file.location.description=Enter a filename to import data from. Files will be loaded from:
jira-importer-plugin.external.existing.configuration.file=Existing configuration file
jira-importer-plugin.importer.existing.configuration.file.description=Enter a filename of your configuration file. No configuration file? Run the {0}Import Wizard{1} first. Files will be loaded from:
jira-importer-plugin.external.csv.import.data=Import Data from CSV file
jira-importer-plugin.external.csv.begin.import=Begin Import
jira-importer-plugin.external.csv.choose.objects=Choose the objects that you wish to be imported automatically into JIRA.
jira-importer-plugin.external.create.new.users=Create new users
jira-importer-plugin.external.create.new.users.description=Users whose usernames do not exist will be created.
jira-importer-plugin.external.create.new.versions=Create new versions
jira-importer-plugin.external.create.new.versions.description=Versions that do not exist will be created
jira-importer-plugin.external.create.new.components=Create new components
jira-importer-plugin.external.create.new.components.description=Components that do not exist will be created
jira-importer-plugin.external.create.new.custom.fields=Create new custom fields
jira-importer-plugin.external.create.new.custom.fields.description=Custom fields that do not exist will be created
jira-importer-plugin.external.maximum.issues.and.failures=Maximum issues and failures
jira-importer-plugin.external.maximum.issues.and.failures.description=Number of total issues and failures - leave blank to import all.
jira-importer-plugin.external.start.wizard=Start Import Wizard
jira-importer-plugin.external.csv.configure.csv.importer=Configure CSV Importer
jira-importer-plugin.external.csv.import.wizard.instruction=To import issues you will need to have an import configuration file. This wizard will help you create one or if you already have one you can upload it for reuse.
jira-importer-plugin.importer.existing.configuration.file.description2=The location of an existing configuration file to edit. Leave blank for a fresh import configuration. Files will be loaded from:
jira-importer-plugin.external.csv.delimiter=CSV Delimiter
jira-importer-plugin.external.csv.delimiter.description=Leave blank for comma or enter \\t for tab-delimited.
jira-importer-plugin.external.map.field.value=Map field value
jira-importer-plugin.external.unique.values.displayed=Leave the field blank if you wish to import the value as-is. If you want to {0}clear{1} a field, enter the keyword {2}.
jira-importer-plugin.external.value.in.importer=Value from importer
jira-importer-plugin.external.target.value=Target value in JIRA
jira-importer-plugin.external.value.no.fields = You have not selected any fields to map values.
jira-importer-plugin.external.file.location=Configuration file location
jira-importer-plugin.external.file.location.description=Enter the name of the configuration file to save. File will be saved to:
jira-importer-plugin.external.mappings.save.preview = Preview of configuration file
jira-importer-plugin.external.mappings.setup = Setup
jira-importer-plugin.external.mappings.custom.field = Issue Field Mappings
jira-importer-plugin.external.mappings.value = Field Value Mappings
jira-importer-plugin.external.mappings.link = Issue Link Mappings
jira-importer-plugin.external.mappings.import.nosave = Import without saving
jira-importer-plugin.external.mappings.save = Save Configuration File
jira-importer-plugin.external.mappings.save.description = You have now finished your configuration file! You may now save it in a location on the server or copy and paste from the area below.
jira-importer-plugin.external.mappings.save.location = Enter the location to save your configuration file to
jira-importer-plugin.external.fogbugz.title = Configure FogBugz Importer
jira-importer-plugin.external.fogbugz.title.prefix = FogBugz Import Wizard:
jira-importer-plugin.external.fogbugz.setup.description = The FogBugz Import Wizard allows to choose projects to be imported, map FogBugz custom fields to JIRA custom fields and chose the link types for duplicates and bug relation.
jira-importer-plugin.external.fogbugz.mappings.project = Project Key Mappings
jira-importer-plugin.external.fogbugz.mappings.project.description = All FogBugz projects have been listed below. Choose a valid project key for each project you want to import. Leave blank if you do not wish to import the project.
jira-importer-plugin.external.fogbugz.mappings.fogbugz.project.name = FogBugz project name
jira-importer-plugin.config.mappings.target.project.key = Target project key
jira-importer-plugin.external.fogbugz.mappings.project.key.description = Key of project to be imported into, leave blank to not import
jira-importer-plugin.config.mappings.custom.fields.description = The fields below are fields that can be mapped to JIRA custom fields. Please choose an existing custom field to import into. Please note that only Global custom fields will be shown.
jira-importer-plugin.config.mappings.field.import.field = FogBugz Field
jira-importer-plugin.external.fogbugz.mappings.field.jira.field = Corresponding JIRA field
jira-importer-plugin.config.mappings.value.description = The importer allows you to transform values of various fields during the import process. Check the boxes next to fields below if you want to map their data during import
jira-importer-plugin.config.mappings.value.distinct.count = Distinct values
jira-importer-plugin.external.fogbugz.mappings.value.computer = The sComputer field is a custom field that can represent the source of the Bug in FogBugz. This will be treated as a multi valued field if there are any commas in it.
jira-importer-plugin.external.fogbugz.mappings.value.fullname = You can map the user name in FogBugz to a specific userId in JIRA. A username will be automatically generated if you don''t map a username explicitly.
jira-importer-plugin.external.fogbugz.mappings.value.category = The sCategory field refers to the issue type field in JIRA.
jira-importer-plugin.config.mappings.link.description = FogBugz has two types of links, Duplicates and BugRelations. You can map the links to existsing JIRA link types.
jira-importer-plugin.config.mappings.link.import.field = FogBugz Link
jira-importer-plugin.config.mappings.link.jira.field = Corresponding JIRA Link Type
jira-importer-plugin.importer.description=Import issues from a FogBugz installation
jira-importer-plugin.fogbugz.instruction=To import issues from FogBugz you must have a valid configuration file saved on the server.
jira-importer-plugin.fogbugz.wizard.prefix=Run the {0}FogBugz Import Wizard{1} to create or edit a configuration file.
jira-importer-plugin.fogbugz.wizard.description=The wizard will allow you to choose projects, custom fields and issue links to import. Once this is completed, you can save the file on the server and use it in the import process.
jira-importer-plugin.fogbugz.database.url=FogBugz Database URL
jira-importer-plugin.fogbugz.database.login.name=Database Login Name
jira-importer-plugin.fogbugz.database.login.password=Database Login Password
jira-importer-plugin.fogbugz.driver.name=Driver Name
jira-importer-plugin.fogbugz.status.violation=Project {0} does not contain statuses Closed and/or Resolved. These statuses are required for a FogBugz import.
jira-importer-plugin.csv.wizard=CSV Import Wizard
jira-importer-plugin.csv.project.configuration=Project Configuration
jira-importer-plugin.csv.configure.csv.importer=Configure CSV Importer
jira-importer-plugin.csv.choose.project.tip=If you want to import into multiple projects, you must map project information from the CSV file itself.
jira-importer-plugin.csv.select.how=Select how you want to import your project
jira-importer-plugin.csv.select.existing.project=Select an existing project
jira-importer-plugin.csv.project.name=Project name
jira-importer-plugin.csv.project.key=Project key
jira-importer-plugin.csv.project.description=Project description
jira-importer-plugin.csv.project.url=Project url
jira-importer-plugin.csv.project.lead=Project lead
jira-importer-plugin.csv.issue.field.mappings=Issue Field Mappings
jira-importer-plugin.csv.below.are.the.columns=Choose a corresponding JIRA field to import into or leave as "None" to not import it.
jira-importer-plugin.csv.note.on.validations={0}Note:{1} You must import {2}Summary{3} or your import will not succeed.
jira-importer-plugin.csv.csv.header.row=CSV header row
jira-importer-plugin.csv.custom.field.name=Custom field name
jira-importer-plugin.csv.custom.field.type=Custom field type
jira-importer-plugin.csv.custom.field.name.desc=Name of custom field. If same as existing field, existing field will be used.
jira-importer-plugin.csv.custom.field.type.desc=Type of the custom field
jira-importer-plugin.csv.value.mappings=Value Mappings
jira-importer-plugin.csv.can.create.on.the.fly=You can also create missing priorities, resolution and issue types on the fly by clicking on the {0} icon next to for the appropriate field.
jira-importer-plugin.csv.no.fields.selected=You have not selected any fields to map values.
jira-importer-plugin.csv.add.new.priority=Add new priority {0}
jira-importer-plugin.csv.add.new.resolution=Add new resolution {0}
jira-importer-plugin.csv.add.new.issue.type=Add new issue type {0}
jira-importer-plugin.csv.imported.as=imported as {0}
jira-importer-plugin.csv.sample.icon=Sample icon
jira-importer-plugin.csv.option.blank=Import as blank
jira-importer-plugin.csv.option.priority=Please select a priority
jira-importer-plugin.csv.option.status=Please select a status
jira-importer-plugin.csv.option.issue.type=Please select an issue type
jira-importer-plugin.csv.option.resolution=Please select a resolution
jira-importer-plugin.csv.email.suffix.description=(e.g. @atlassian.com)
jira-importer-plugin.csv.email.suffix=E-mail Suffix for New Users
jira-importer-plugin.csv.date.formats=Please specify the format that dates in the import file are in (e.g. {3}). {0}Please use syntax valid for {1}SimpleDateFormat{2} (link will open new window).
jira-importer-plugin.csv.date.format.import.file=Date format in import file
jira-importer-plugin.csv.sun.java.api=Sun Java API
jira-importer-plugin.csv.save.config.file=Save Configuration File
jira-importer-plugin.csv.saved.config.file=You have now finished your configuration file! You may now save it in a location on the server or copy and paste from the area below.
jira-importer-plugin.csv.preview=Preview of configuration file
jira-importer-plugin.csv.import.without.saving=Import without saving
jira-importer-plugin.csv.import.data.from=Import Data from {0}
jira-importer-plugin.csv.return.to.importer=Return to {0} importer
jira-importer-plugin.csv.import.completed.with.errors={0}{1} import completed with errors{2} The importer has completed with some errors. You can find the errors in the logs below by searching for lines which begin with FAILED. It is likely that the import was not correctly configured.
jira-importer-plugin.csv.import.success={0}{1} import successfully completed{2} The importer has completed successfully without any errors.
jira-importer-plugin.csv.import.in.progress={0} import in progress...
jira-importer-plugin.csv.logs.refreshed=The logs and import statistics below will be refreshed every {0} seconds. You can change this value in the field at the {1}bottom of the page{2}.
jira-importer-plugin.csv.you.have.imported=You have imported {0} issues and reindexing will occur. This may take some time depending on the number of issues in your database.
jira-importer-plugin.csv.page.refresh.interval=Page refresh interval
jira-importer-plugin.csv.page.refresh.interval.description=You can change the interval between each page reload (in seconds)
jira-importer-plugin.importlogs.import.logs=Import logs
jira-importer-plugin.importlogs.please.note=Please note that your logs are very long and have been truncated to improve performance. The full logs will be displayed when the importer finishes.
jira-importer-plugin.importlogs.statistic=Statistic
jira-importer-plugin.importlogs.data=Data
jira-importer-plugin.importlogs.elapsed.time=Elapsed time
jira-importer-plugin.importlogs.import.rate=Import rate (issues per minute)
jira-importer-plugin.importlogs.failures=Failures
jira-importer-plugin.importlogs.users.imported=Users imported
jira-importer-plugin.importlogs.projects.imported=Projects imported
jira-importer-plugin.importlogs.versions.imported=Versions imported
jira-importer-plugin.importlogs.components.imported=Components imported
jira-importer-plugin.importlogs.issues.imported=Issues imported
jira-importer-plugin.importlogs.new.custom.fields=New custom fields created
jira-importer-plugin.importlogs.new.issue.types=New issue types
jira-importer-plugin.importlogs.new.resolutions=New resolutions
jira-importer-plugin.importlogs.new.priorities=New priorities
